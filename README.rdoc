= minitest-rails

MiniTest integration for Rails 3.x

== Install

    gem install minitest-rails

This installs the following gems:

    minitest

== Configure

Create a new rails app without Test::Unit:

    rails new MyApp --skip-test-unit

Add <tt>minitest-rails</tt> to the <tt>:test</tt> and <tt>:development</tt> groups in Gemfile:

    group :test, :development do
      gem 'minitest-rails'
    end

Next run the installation generator with the following:

    rails generate mini_test:install

This will add the <tt>minitest_helper.rb</tt> file to the <tt>test</tt> directory.

== Usage

We aim to expose MiniTest with minimal changes for testing within Rails.
Because of this, we allow Test::Unit and MiniTest tests to live side by side.
Your test classes will inherit from MiniTest::Rails::ActiveSupport::TestCase a opposed to ActiveSupport::TestCase.
You can use the MiniTest::Spec DSL.
You can generate test files with the standard model, controller, resource, and other generators:

    rails generate model User

And you can specify generating the tests using the MiniTest::Spec DSL on any of the generators by providing the <tt>--spec</tt> option:

    rails generate model User --spec

And you can specify not generating the fixture for a model by providing the <tt>--skip-fixture</tt> option:

    rails generate model User --skip-fixture

You can also set these as defaults by adding the following to the <tt>config/application.rb</tt> file:

    config.generators do |g|
      g.test_framework :mini_test, :spec => true, :fixture => false
    end

== Overriding Test::Unit

Of course, you may not want to maintain separate Test::Unit and MiniTest tests.
If this is the behavior you are wanting, simply add the following to your <tt>test_helper.rb</tt> file:

    require "minitest/rails"
    MiniTest::Rails.override_testunit!

== Capybara

You can use Capybara in your acceptance/integration tests by adding <tt>minitest-rails-capybara</tt> as a dependency.

    group :test, :development do
      gem 'minitest-rails'
      gem 'minitest-rails-capybara'
    end

And add the following to your test helper file:

    require "minitest/rails/capybara"

See the <tt>minitest-rails-capybara</tt> project for more information.

== Incompatibilities

Existing tests that call <tt>describe</tt> will not work, since <tt>describe</tt> is used by MiniTest::Spec blocks.

== Get Involved

Join the mailing list to get help or offer suggestions.

https://groups.google.com/group/minitest-rails

== License

Copyright Â© 2012 Mike Moore.

Released under the MIT license. See `LICENSE` for details.
