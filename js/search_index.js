var search_data = {"index":{"searchIndex":["actioncontroller","testcase","actiondispatch","integrationtest","actionmailer","testcase","actionview","testcase","activerecord","activesupport","testcase","minitest","rails","expectations","testing","constantlookup","all_tasks()","assert_blank()","assert_difference()","assert_no_difference()","assert_present()","determine_default_controller_class()","determine_default_helper_class()","determine_default_mailer()","must_be_blank()","must_be_present()","must_change()","refute_blank()","refute_difference()","refute_present()","wont_be_blank()","wont_be_present()","wont_change()","changelog","manifest","readme"],"longSearchIndex":["actioncontroller","actioncontroller::testcase","actiondispatch","actiondispatch::integrationtest","actionmailer","actionmailer::testcase","actionview","actionview::testcase","activerecord","activesupport","activesupport::testcase","minitest","minitest::rails","minitest::rails::expectations","minitest::rails::testing","minitest::rails::testing::constantlookup","minitest::rails::testing::all_tasks()","activesupport::testcase#assert_blank()","activesupport::testcase#assert_difference()","activesupport::testcase#assert_no_difference()","activesupport::testcase#assert_present()","actioncontroller::testcase::determine_default_controller_class()","actionview::testcase::determine_default_helper_class()","actionmailer::testcase::determine_default_mailer()","minitest::rails::expectations#must_be_blank()","minitest::rails::expectations#must_be_present()","minitest::rails::expectations#must_change()","activesupport::testcase#refute_blank()","activesupport::testcase#refute_difference()","activesupport::testcase#refute_present()","minitest::rails::expectations#wont_be_blank()","minitest::rails::expectations#wont_be_present()","minitest::rails::expectations#wont_change()","","",""],"info":[["ActionController","","ActionController.html","",""],["ActionController::TestCase","","ActionController/TestCase.html","",""],["ActionDispatch","","ActionDispatch.html","",""],["ActionDispatch::IntegrationTest","","ActionDispatch/IntegrationTest.html","",""],["ActionMailer","","ActionMailer.html","",""],["ActionMailer::TestCase","","ActionMailer/TestCase.html","",""],["ActionView","","ActionView.html","",""],["ActionView::TestCase","","ActionView/TestCase.html","",""],["ActiveRecord","","ActiveRecord.html","",""],["ActiveSupport","","ActiveSupport.html","",""],["ActiveSupport::TestCase","","ActiveSupport/TestCase.html","",""],["MiniTest","","MiniTest.html","",""],["MiniTest::Rails","","MiniTest/Rails.html","",""],["MiniTest::Rails::Expectations","","MiniTest/Rails/Expectations.html","",""],["MiniTest::Rails::Testing","","MiniTest/Rails/Testing.html","",""],["MiniTest::Rails::Testing::ConstantLookup","","MiniTest/Rails/Testing/ConstantLookup.html","","<p>Resolves a constant from a minitest spec name.\n<p>Given the following spec-style test:\n\n<pre>describe WidgetsController, ...</pre>\n"],["all_tasks","MiniTest::Rails::Testing","MiniTest/Rails/Testing.html#method-c-all_tasks","()","<p>Retreive all the directories that have tests in them.\n"],["assert_blank","ActiveSupport::TestCase","ActiveSupport/TestCase.html#method-i-assert_blank","","<p>Checks if an expression is blank. Passes if actual.blank? is true.\n\n<pre>assert_blank []</pre>\n<p>See also MiniTest::Rails::Expectations#must_be_blank …\n"],["assert_difference","ActiveSupport::TestCase","ActiveSupport/TestCase.html#method-i-assert_difference","","<p>Checks the numeric difference between the return value of an expression as\na result of what is evaluated. …\n"],["assert_no_difference","ActiveSupport::TestCase","ActiveSupport/TestCase.html#method-i-assert_no_difference","","<p>Checks that the numeric result of evaluating an expression is not changed\nbefore and after invoking. …\n"],["assert_present","ActiveSupport::TestCase","ActiveSupport/TestCase.html#method-i-assert_present","","<p>Checks if an expression is present. Passes if actual.present? is true.\n\n<pre>assert_present Object.new</pre>\n<p>See also …\n"],["determine_default_controller_class","ActionController::TestCase","ActionController/TestCase.html#method-c-determine_default_controller_class","(name)","<p>Resolve the controller from the test name when using the spec DSL\n"],["determine_default_helper_class","ActionView::TestCase","ActionView/TestCase.html#method-c-determine_default_helper_class","(name)","<p>Resolve the helper or view from the test name when using the spec DSL\n"],["determine_default_mailer","ActionMailer::TestCase","ActionMailer/TestCase.html#method-c-determine_default_mailer","(name)","<p>Resolve the mailer from the test name when using the spec DSL\n"],["must_be_blank","MiniTest::Rails::Expectations","MiniTest/Rails/Expectations.html#method-i-must_be_blank","message = nil","<p>Checks if an expression is blank. Passes if actual.blank? is true.\n\n<pre>&quot;&quot;.must_be_blank\nnil.must_be_blank ...</pre>\n"],["must_be_present","MiniTest::Rails::Expectations","MiniTest/Rails/Expectations.html#method-i-must_be_present","message = nil","<p>Checks if an expression is present. Passes if actual.present? is true.\n\n<pre>&quot;here&quot;.must_be_present\nObject.new.must_be_present ...</pre>\n"],["must_change","MiniTest::Rails::Expectations","MiniTest/Rails/Expectations.html#method-i-must_change","expression, difference = 1, message = nil","<p>Checks the numeric difference between the return value of an expression as\na result of what is evaluated. …\n"],["refute_blank","ActiveSupport::TestCase","ActiveSupport/TestCase.html#method-i-refute_blank","","<p>Checks if an expression is not blank. Passes if actual.blank? is false.\n\n<pre>refute_blank [1,2,3]</pre>\n<p>See also  …\n"],["refute_difference","ActiveSupport::TestCase","ActiveSupport/TestCase.html#method-i-refute_difference","","<p>Checks that the numeric result of evaluating an expression is not changed\nbefore and after invoking. …\n"],["refute_present","ActiveSupport::TestCase","ActiveSupport/TestCase.html#method-i-refute_present","","<p>Checks if an expression is not present. Passes if actual.present? is false.\n\n<pre>refute_present nil</pre>\n<p>See also …\n"],["wont_be_blank","MiniTest::Rails::Expectations","MiniTest/Rails/Expectations.html#method-i-wont_be_blank","message = nil","<p>Checks if an expression is not blank. Passes if actual.blank? is false.\n\n<pre>&quot;here&quot;.wont_be_blank\nObject.new.wont_be_blank ...</pre>\n"],["wont_be_present","MiniTest::Rails::Expectations","MiniTest/Rails/Expectations.html#method-i-wont_be_present","message = nil","<p>Checks if an expression is not present. Passes if actual.present? is false.\n\n<pre>&quot;&quot;.wont_be_present\nnil.wont_be_present ...</pre>\n"],["wont_change","MiniTest::Rails::Expectations","MiniTest/Rails/Expectations.html#method-i-wont_change","expression, message = nil","<p>Checks that the numeric result of evaluating an expression is not changed\nbefore and after invoking. …\n"],["CHANGELOG","","CHANGELOG_rdoc.html","","<p>0.9.2 / 2013-04-05\n<p>Fix nested describes in ruby 1.8\n\n<p>github.com/blowmage/minitest-rails/compare/v0.9.1…v0.9.2 …\n"],["Manifest","","Manifest_txt.html","","<p>.autotest .gemtest .travis.yml CHANGELOG.rdoc LICENSE Manifest.txt\nREADME.rdoc Rakefile gemfiles/3.0.gemfile …\n"],["README","","README_rdoc.html","","<p>minitest-rails\n<p>MiniTest integration for Rails 3 and 4\n<p><img src=“https://secure.travis-ci.org/blowmage/minitest-rails.png” …\n"]]}}